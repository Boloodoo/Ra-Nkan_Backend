// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: orders.sql

package db

import (
	"context"
)

const createOrder = `-- name: CreateOrder :one
INSERT INTO orders (
    product_id,
    qty_bought,
    unit_price,
    total_price,
    user_id
) VALUES (
    $1, $2, $3, $4, $5) RETURNING id, product_id, qty_bought, unit_price, total_price, user_id, created_at, updated_at
`

type CreateOrderParams struct {
	ProductID  int64  `json:"product_id"`
	QtyBought  int32  `json:"qty_bought"`
	UnitPrice  string `json:"unit_price"`
	TotalPrice string `json:"total_price"`
	UserID     int64  `json:"user_id"`
}

func (q *Queries) CreateOrder(ctx context.Context, arg CreateOrderParams) (Order, error) {
	row := q.db.QueryRowContext(ctx, createOrder,
		arg.ProductID,
		arg.QtyBought,
		arg.UnitPrice,
		arg.TotalPrice,
		arg.UserID,
	)
	var i Order
	err := row.Scan(
		&i.ID,
		&i.ProductID,
		&i.QtyBought,
		&i.UnitPrice,
		&i.TotalPrice,
		&i.UserID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
